name: CDN Deploy Staging

on:
  workflow_run:
    workflows: ["Release"]
    branches: [main]
    types:
      - completed

jobs:
  cdnDeployStaging:
    # If the release action completes successfully then deploy to staging.
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: CDN Deploy Staging
    container: sleavely/node-awscli:14.x
    environment: Staging
    runs-on: ${{ matrix.os }}
    env:
      CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      CDK_AWS_ACCESS_KEY_ID: ${{ secrets.CDK_AWS_ACCESS_KEY_ID }}
      CDK_AWS_SECRET_ACCESS_KEY: ${{ secrets.CDK_AWS_SECRET_ACCESS_KEY }}
      CDN_DOMAIN: ${{ secrets.CDN_DOMAIN }}
      ACCOUNT: ${{ secrets.ACCOUNT }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Tag Env Variable
        run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Deploy Staging
        run: |
          export ENVIRONMENT=stg
          export REGION=eu-west-1
          cd ./cdn &&
          npm install &&
          cdk synth
          export AWS_DEFAULT_REGION=eu-west-1 &&
          export AWS_ACCESS_KEY_ID=$CDK_AWS_ACCESS_KEY_ID &&
          export AWS_SECRET_ACCESS_KEY=$CDK_AWS_SECRET_ACCESS_KEY &&
          cdk bootstrap &&
          cdk deploy -- --require-approval never
          cd ../ &&
          npm run build &&
          aws s3 sync ./dist s3://salablecdncdkstack-salablejssdkcdnbucket5f068f22-1xkyuun2k8v7o/$RELEASE_VERSION &&
          aws s3 cp ./dist s3://salablecdncdkstack-salablejssdkcdnbucket5f068f22-1xkyuun2k8v7o/latest --recursive
